#pragma once
#include "C:\\lib\\DxLib_VC\\library\\DxLib.h"
#include <string>
#include <utility>
#include <vector>

const std::vector<std::pair<std::string, int>> config_list = {
	{ "Backspace", KEY_INPUT_BACK },
	{ "Tab", KEY_INPUT_TAB },
	{ "Enter", KEY_INPUT_RETURN },
	{ "LeftShift", KEY_INPUT_LSHIFT },
	{ "RightShift", KEY_INPUT_RSHIFT },
	{ "LeftCtrl", KEY_INPUT_LCONTROL },
	{ "RightCtrl", KEY_INPUT_RCONTROL },
	{ "Esc", KEY_INPUT_ESCAPE },
	{ "Space", KEY_INPUT_SPACE },
	{ "PageUp", KEY_INPUT_PGUP },
	{ "PageDown", KEY_INPUT_PGDN },
	{ "End", KEY_INPUT_END },
	{ "Home", KEY_INPUT_HOME },
	{ "←", KEY_INPUT_LEFT },
	{ "↑", KEY_INPUT_UP },
	{ "→", KEY_INPUT_RIGHT },
	{ "↓", KEY_INPUT_DOWN },
	{ "Insert", KEY_INPUT_INSERT },
	{ "Delete", KEY_INPUT_DELETE },
	{ "-", KEY_INPUT_MINUS },
	{ "YEN", KEY_INPUT_YEN },
	{ "^", KEY_INPUT_PREVTRACK },
	{ ".", KEY_INPUT_PERIOD },
	{ "/", KEY_INPUT_SLASH },
	{ "LeftAlt", KEY_INPUT_LALT },
	{ "RightAlt", KEY_INPUT_RALT },
	{ ";", KEY_INPUT_SEMICOLON },
	{ ":", KEY_INPUT_COLON },
	{ "[", KEY_INPUT_LBRACKET },
	{ "]", KEY_INPUT_RBRACKET },
	{ "@", KEY_INPUT_AT },
	{ "BackSlash", KEY_INPUT_BACKSLASH },
	{ ",", KEY_INPUT_COMMA },
	{ "半角/全角", KEY_INPUT_KANJI },
	{ "変換", KEY_INPUT_KANJI },
	{ "無変換", KEY_INPUT_NOCONVERT },
	{ "カタカナ/ひらがな", KEY_INPUT_KANA },
	{ "アプリケーション", KEY_INPUT_APPS },
	{ "PrintScreen", KEY_INPUT_SYSRQ },
	{ "PauseBreak", KEY_INPUT_PAUSE },
	{ "LeftWindows", KEY_INPUT_LWIN },
	{ "RightWindows", KEY_INPUT_RWIN },
	{ "Num0", KEY_INPUT_NUMPAD0 },
	{ "Num1", KEY_INPUT_NUMPAD1 },
	{ "Num2", KEY_INPUT_NUMPAD2 },
	{ "Num3", KEY_INPUT_NUMPAD3 },
	{ "Num4", KEY_INPUT_NUMPAD4 },
	{ "Num5", KEY_INPUT_NUMPAD5 },
	{ "Num6", KEY_INPUT_NUMPAD6 },
	{ "Num7", KEY_INPUT_NUMPAD7 },
	{ "Num8", KEY_INPUT_NUMPAD8 },
	{ "Num9", KEY_INPUT_NUMPAD9 },
	{ "NumAsterisk", KEY_INPUT_MULTIPLY },
	{ "NumPlus", KEY_INPUT_ADD },
	{ "NumMinus", KEY_INPUT_SUBTRACT },
	{ "NumPeriod", KEY_INPUT_DECIMAL },
	{ "NumSlash", KEY_INPUT_DIVIDE },
	{ "NumEnter", KEY_INPUT_NUMPADENTER },
	{ "F1", KEY_INPUT_F1 },
	{ "F2", KEY_INPUT_F2 },
	{ "F3", KEY_INPUT_F3 },
	{ "F4", KEY_INPUT_F4 },
	{ "F5", KEY_INPUT_F5 },
	{ "F6", KEY_INPUT_F6 },
	{ "F7", KEY_INPUT_F7 },
	{ "F8", KEY_INPUT_F8 },
	{ "F9", KEY_INPUT_F9 },
	{ "F10", KEY_INPUT_F10 },
	{ "F12", KEY_INPUT_F12 },
	{ "A", KEY_INPUT_A },
	{ "B", KEY_INPUT_B },
	{ "C", KEY_INPUT_C },
	{ "D", KEY_INPUT_D },
	{ "E", KEY_INPUT_E },
	{ "F", KEY_INPUT_F },
	{ "G", KEY_INPUT_G },
	{ "H", KEY_INPUT_H },
	{ "I", KEY_INPUT_I },
	{ "J", KEY_INPUT_J },
	{ "K", KEY_INPUT_K },
	{ "L", KEY_INPUT_L },
	{ "M", KEY_INPUT_M },
	{ "N", KEY_INPUT_N },
	{ "O", KEY_INPUT_O },
	{ "P", KEY_INPUT_P },
	{ "Q", KEY_INPUT_Q },
	{ "R", KEY_INPUT_R },
	{ "S", KEY_INPUT_S },
	{ "T", KEY_INPUT_T },
	{ "U", KEY_INPUT_U },
	{ "V", KEY_INPUT_V },
	{ "W", KEY_INPUT_W },
	{ "X", KEY_INPUT_X },
	{ "Y", KEY_INPUT_Y },
	{ "Z", KEY_INPUT_Z },
	{ "0", KEY_INPUT_0 },
	{ "1", KEY_INPUT_1 },
	{ "2", KEY_INPUT_2 },
	{ "3", KEY_INPUT_3 },
	{ "4", KEY_INPUT_4 },
	{ "5", KEY_INPUT_5 },
	{ "6", KEY_INPUT_6 },
	{ "7", KEY_INPUT_7 },
	{ "8", KEY_INPUT_8 },
	{ "9", KEY_INPUT_9 }
};
